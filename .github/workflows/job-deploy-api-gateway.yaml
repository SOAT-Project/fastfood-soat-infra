name: Deploy FastFoodSoatLambdaCredential Auth

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
    secrets:
      aws-assume-role-arn:
        required: true
      aws-region:
        required: true
      aws-statefile-s3-bucket:
        required: true
      aws-lock-dynamodb-table:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws-assume-role-arn }}
          aws-region: ${{ secrets.aws-region }}

      - name: Terraform Init
        working-directory: ./api.gateway
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.aws-statefile-s3-bucket }}" \
            -backend-config="key=${{ github.event.repository.name }}-api-gateway" \
            -backend-config="region=${{ secrets.aws-region }}" \
            -backend-config="dynamodb_table=${{ secrets.aws-lock-dynamodb-table }}" \

      - name: Terraform Format Check
        if: github.event_name == 'pull_request'
        working-directory: ./api.gateway
        run: terraform fmt -check -recursive

      - name: Terraform Auto Format
        if: github.ref == 'refs/heads/main'
        working-directory: ./api.gateway
        run: terraform fmt -recursive

      - name: Terraform Validate
        working-directory: ./api.gateway
        run: terraform validate

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        working-directory: ./api.gateway
        run: terraform plan -input=false

      - name: Terraform Apply
        working-directory: ./api.gateway
        run: |
          terraform apply -auto-approve