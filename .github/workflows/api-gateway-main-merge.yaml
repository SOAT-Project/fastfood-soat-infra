name: "API Gateway - Main/Release Deploy"

on:
  push:
    branches:
      - release
      - main
    paths:
      - 'api-gateway-main-merge.yaml'
      - 'api.gateway/**'

permissions:
  id-token: write
  contents: read

jobs:

  deploy-api-gateway:
    name: Deploy API Gateway
    uses: ./.github/workflows/job-deploy-api-gateway.yaml
    with:
      environment: release
      aws-eks-alb-dns: ${{ secrets.AWS_EKS_ALB_DNS }}
      aws-eks-alb-arn: ${{ secrets.AWS_EKS_ALB_ARN }}
      aws-middleware-lambda-arn: ${{ secrets.AWS_MIDDLEWARE_LAMBDA_ARN }}
      aws-auth-lambda-arn: ${{ secrets.AWS_AUTH_LAMBDA_ARN }}
      aws-region: ${{ secrets.AWS_REGION }}
      aws-statefile-s3-bucket: ${{ secrets.AWS_STATEFILE_S3_BUCKET }}
      aws-lock-dynamodb-table: ${{ secrets.AWS_LOCK_DYNAMODB_TABLE }}
    secrets:
      aws-assume-role-arn: ${{ secrets.AWS_API_GATEWAY_ROLE_TO_ASSUME }}

  notify:
    name: Notify
    needs: [deploy-api-gateway]
    if: ${{ always() }}
    uses: ./.github/workflows/job-notify-build-api-gateway.yaml
    with:
      build_status: ${{ needs.deploy-api-gateway.result && 'success' || 'failure' }}
    secrets:
      DISCORD_BUILD_WEBHOOK: ${{ secrets.DISCORD_BUILD_WEBHOOK }}